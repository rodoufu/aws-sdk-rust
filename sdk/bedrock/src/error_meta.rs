// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
/// All possible error types for this service.
#[non_exhaustive]
#[derive(::std::fmt::Debug)]
pub enum Error {
    /// <p>The request is denied because of missing access permissions.</p>
    AccessDeniedException(crate::types::error::AccessDeniedException),
    /// <p>Error occurred because of a conflict while performing an operation.</p>
    ConflictException(crate::types::error::ConflictException),
    /// <p>An internal server error occurred. Retry your request.</p>
    InternalServerException(crate::types::error::InternalServerException),
    /// <p>The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.</p>
    ResourceNotFoundException(crate::types::error::ResourceNotFoundException),
    /// <p>The number of requests exceeds the service quota. Resubmit your request later.</p>
    ServiceQuotaExceededException(crate::types::error::ServiceQuotaExceededException),
    /// <p>The number of requests exceeds the limit. Resubmit your request later.</p>
    ThrottlingException(crate::types::error::ThrottlingException),
    /// <p>The request contains more tags than can be associated with a resource (50 tags per resource). The maximum number of tags includes both existing tags and those included in your current request.</p>
    TooManyTagsException(crate::types::error::TooManyTagsException),
    /// <p>Input validation failed. Check your request parameters and retry the request.</p>
    ValidationException(crate::types::error::ValidationException),
    /// An unexpected error occurred (e.g., invalid JSON returned by the service or an unknown error code).
    #[deprecated(note = "Matching `Unhandled` directly is not forwards compatible. Instead, match using a \
    variable wildcard pattern and check `.code()`:
     \
    &nbsp;&nbsp;&nbsp;`err if err.code() == Some(\"SpecificExceptionCode\") => { /* handle the error */ }`
     \
    See [`ProvideErrorMetadata`](#impl-ProvideErrorMetadata-for-Error) for what information is available for the error.")]
    Unhandled(crate::error::sealed_unhandled::Unhandled),
}
impl ::std::fmt::Display for Error {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        match self {
            Error::AccessDeniedException(inner) => inner.fmt(f),
            Error::ConflictException(inner) => inner.fmt(f),
            Error::InternalServerException(inner) => inner.fmt(f),
            Error::ResourceNotFoundException(inner) => inner.fmt(f),
            Error::ServiceQuotaExceededException(inner) => inner.fmt(f),
            Error::ThrottlingException(inner) => inner.fmt(f),
            Error::TooManyTagsException(inner) => inner.fmt(f),
            Error::ValidationException(inner) => inner.fmt(f),
            Error::Unhandled(_) => {
                if let ::std::option::Option::Some(code) = ::aws_smithy_types::error::metadata::ProvideErrorMetadata::code(self) {
                    write!(f, "unhandled error ({code})")
                } else {
                    f.write_str("unhandled error")
                }
            }
        }
    }
}
impl From<::aws_smithy_types::error::operation::BuildError> for Error {
    fn from(value: ::aws_smithy_types::error::operation::BuildError) -> Self {
        Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
            source: value.into(),
            meta: ::std::default::Default::default(),
        })
    }
}
impl ::aws_smithy_types::error::metadata::ProvideErrorMetadata for Error {
    fn meta(&self) -> &::aws_smithy_types::error::metadata::ErrorMetadata {
        match self {
            Self::AccessDeniedException(inner) => inner.meta(),
            Self::ConflictException(inner) => inner.meta(),
            Self::InternalServerException(inner) => inner.meta(),
            Self::ResourceNotFoundException(inner) => inner.meta(),
            Self::ServiceQuotaExceededException(inner) => inner.meta(),
            Self::ThrottlingException(inner) => inner.meta(),
            Self::TooManyTagsException(inner) => inner.meta(),
            Self::ValidationException(inner) => inner.meta(),
            Self::Unhandled(inner) => &inner.meta,
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_evaluation_job::CreateEvaluationJobError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_evaluation_job::CreateEvaluationJobError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::create_evaluation_job::CreateEvaluationJobError> for Error {
    fn from(err: crate::operation::create_evaluation_job::CreateEvaluationJobError) -> Self {
        match err {
            crate::operation::create_evaluation_job::CreateEvaluationJobError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::create_evaluation_job::CreateEvaluationJobError::ConflictException(inner) => Error::ConflictException(inner),
            crate::operation::create_evaluation_job::CreateEvaluationJobError::InternalServerException(inner) => {
                Error::InternalServerException(inner)
            }
            crate::operation::create_evaluation_job::CreateEvaluationJobError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::create_evaluation_job::CreateEvaluationJobError::ServiceQuotaExceededException(inner) => {
                Error::ServiceQuotaExceededException(inner)
            }
            crate::operation::create_evaluation_job::CreateEvaluationJobError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::create_evaluation_job::CreateEvaluationJobError::ValidationException(inner) => Error::ValidationException(inner),
            crate::operation::create_evaluation_job::CreateEvaluationJobError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_guardrail::CreateGuardrailError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_guardrail::CreateGuardrailError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::create_guardrail::CreateGuardrailError> for Error {
    fn from(err: crate::operation::create_guardrail::CreateGuardrailError) -> Self {
        match err {
            crate::operation::create_guardrail::CreateGuardrailError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::create_guardrail::CreateGuardrailError::ConflictException(inner) => Error::ConflictException(inner),
            crate::operation::create_guardrail::CreateGuardrailError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::create_guardrail::CreateGuardrailError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::create_guardrail::CreateGuardrailError::ServiceQuotaExceededException(inner) => {
                Error::ServiceQuotaExceededException(inner)
            }
            crate::operation::create_guardrail::CreateGuardrailError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::create_guardrail::CreateGuardrailError::TooManyTagsException(inner) => Error::TooManyTagsException(inner),
            crate::operation::create_guardrail::CreateGuardrailError::ValidationException(inner) => Error::ValidationException(inner),
            crate::operation::create_guardrail::CreateGuardrailError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_guardrail_version::CreateGuardrailVersionError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_guardrail_version::CreateGuardrailVersionError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::create_guardrail_version::CreateGuardrailVersionError> for Error {
    fn from(err: crate::operation::create_guardrail_version::CreateGuardrailVersionError) -> Self {
        match err {
            crate::operation::create_guardrail_version::CreateGuardrailVersionError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::create_guardrail_version::CreateGuardrailVersionError::ConflictException(inner) => Error::ConflictException(inner),
            crate::operation::create_guardrail_version::CreateGuardrailVersionError::InternalServerException(inner) => {
                Error::InternalServerException(inner)
            }
            crate::operation::create_guardrail_version::CreateGuardrailVersionError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::create_guardrail_version::CreateGuardrailVersionError::ServiceQuotaExceededException(inner) => {
                Error::ServiceQuotaExceededException(inner)
            }
            crate::operation::create_guardrail_version::CreateGuardrailVersionError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::create_guardrail_version::CreateGuardrailVersionError::ValidationException(inner) => Error::ValidationException(inner),
            crate::operation::create_guardrail_version::CreateGuardrailVersionError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::create_model_customization_job::CreateModelCustomizationJobError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::create_model_customization_job::CreateModelCustomizationJobError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::create_model_customization_job::CreateModelCustomizationJobError> for Error {
    fn from(err: crate::operation::create_model_customization_job::CreateModelCustomizationJobError) -> Self {
        match err {
            crate::operation::create_model_customization_job::CreateModelCustomizationJobError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::create_model_customization_job::CreateModelCustomizationJobError::ConflictException(inner) => {
                Error::ConflictException(inner)
            }
            crate::operation::create_model_customization_job::CreateModelCustomizationJobError::InternalServerException(inner) => {
                Error::InternalServerException(inner)
            }
            crate::operation::create_model_customization_job::CreateModelCustomizationJobError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::create_model_customization_job::CreateModelCustomizationJobError::ServiceQuotaExceededException(inner) => {
                Error::ServiceQuotaExceededException(inner)
            }
            crate::operation::create_model_customization_job::CreateModelCustomizationJobError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::create_model_customization_job::CreateModelCustomizationJobError::TooManyTagsException(inner) => {
                Error::TooManyTagsException(inner)
            }
            crate::operation::create_model_customization_job::CreateModelCustomizationJobError::ValidationException(inner) => {
                Error::ValidationException(inner)
            }
            crate::operation::create_model_customization_job::CreateModelCustomizationJobError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::create_provisioned_model_throughput::CreateProvisionedModelThroughputError,
            R,
        >,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::create_provisioned_model_throughput::CreateProvisionedModelThroughputError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::create_provisioned_model_throughput::CreateProvisionedModelThroughputError> for Error {
    fn from(err: crate::operation::create_provisioned_model_throughput::CreateProvisionedModelThroughputError) -> Self {
        match err {
            crate::operation::create_provisioned_model_throughput::CreateProvisionedModelThroughputError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::create_provisioned_model_throughput::CreateProvisionedModelThroughputError::InternalServerException(inner) => {
                Error::InternalServerException(inner)
            }
            crate::operation::create_provisioned_model_throughput::CreateProvisionedModelThroughputError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::create_provisioned_model_throughput::CreateProvisionedModelThroughputError::ServiceQuotaExceededException(inner) => {
                Error::ServiceQuotaExceededException(inner)
            }
            crate::operation::create_provisioned_model_throughput::CreateProvisionedModelThroughputError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::create_provisioned_model_throughput::CreateProvisionedModelThroughputError::TooManyTagsException(inner) => {
                Error::TooManyTagsException(inner)
            }
            crate::operation::create_provisioned_model_throughput::CreateProvisionedModelThroughputError::ValidationException(inner) => {
                Error::ValidationException(inner)
            }
            crate::operation::create_provisioned_model_throughput::CreateProvisionedModelThroughputError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_custom_model::DeleteCustomModelError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_custom_model::DeleteCustomModelError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::delete_custom_model::DeleteCustomModelError> for Error {
    fn from(err: crate::operation::delete_custom_model::DeleteCustomModelError) -> Self {
        match err {
            crate::operation::delete_custom_model::DeleteCustomModelError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::delete_custom_model::DeleteCustomModelError::ConflictException(inner) => Error::ConflictException(inner),
            crate::operation::delete_custom_model::DeleteCustomModelError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::delete_custom_model::DeleteCustomModelError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::delete_custom_model::DeleteCustomModelError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::delete_custom_model::DeleteCustomModelError::ValidationException(inner) => Error::ValidationException(inner),
            crate::operation::delete_custom_model::DeleteCustomModelError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_guardrail::DeleteGuardrailError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::delete_guardrail::DeleteGuardrailError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::delete_guardrail::DeleteGuardrailError> for Error {
    fn from(err: crate::operation::delete_guardrail::DeleteGuardrailError) -> Self {
        match err {
            crate::operation::delete_guardrail::DeleteGuardrailError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::delete_guardrail::DeleteGuardrailError::ConflictException(inner) => Error::ConflictException(inner),
            crate::operation::delete_guardrail::DeleteGuardrailError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::delete_guardrail::DeleteGuardrailError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::delete_guardrail::DeleteGuardrailError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::delete_guardrail::DeleteGuardrailError::ValidationException(inner) => Error::ValidationException(inner),
            crate::operation::delete_guardrail::DeleteGuardrailError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::delete_model_invocation_logging_configuration::DeleteModelInvocationLoggingConfigurationError,
            R,
        >,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::delete_model_invocation_logging_configuration::DeleteModelInvocationLoggingConfigurationError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::delete_model_invocation_logging_configuration::DeleteModelInvocationLoggingConfigurationError> for Error {
    fn from(err: crate::operation::delete_model_invocation_logging_configuration::DeleteModelInvocationLoggingConfigurationError) -> Self {
        match err {
            crate::operation::delete_model_invocation_logging_configuration::DeleteModelInvocationLoggingConfigurationError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::delete_model_invocation_logging_configuration::DeleteModelInvocationLoggingConfigurationError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::delete_model_invocation_logging_configuration::DeleteModelInvocationLoggingConfigurationError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::delete_model_invocation_logging_configuration::DeleteModelInvocationLoggingConfigurationError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::delete_provisioned_model_throughput::DeleteProvisionedModelThroughputError,
            R,
        >,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::delete_provisioned_model_throughput::DeleteProvisionedModelThroughputError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::delete_provisioned_model_throughput::DeleteProvisionedModelThroughputError> for Error {
    fn from(err: crate::operation::delete_provisioned_model_throughput::DeleteProvisionedModelThroughputError) -> Self {
        match err {
            crate::operation::delete_provisioned_model_throughput::DeleteProvisionedModelThroughputError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::delete_provisioned_model_throughput::DeleteProvisionedModelThroughputError::ConflictException(inner) => {
                Error::ConflictException(inner)
            }
            crate::operation::delete_provisioned_model_throughput::DeleteProvisionedModelThroughputError::InternalServerException(inner) => {
                Error::InternalServerException(inner)
            }
            crate::operation::delete_provisioned_model_throughput::DeleteProvisionedModelThroughputError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::delete_provisioned_model_throughput::DeleteProvisionedModelThroughputError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::delete_provisioned_model_throughput::DeleteProvisionedModelThroughputError::ValidationException(inner) => {
                Error::ValidationException(inner)
            }
            crate::operation::delete_provisioned_model_throughput::DeleteProvisionedModelThroughputError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_custom_model::GetCustomModelError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_custom_model::GetCustomModelError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::get_custom_model::GetCustomModelError> for Error {
    fn from(err: crate::operation::get_custom_model::GetCustomModelError) -> Self {
        match err {
            crate::operation::get_custom_model::GetCustomModelError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::get_custom_model::GetCustomModelError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::get_custom_model::GetCustomModelError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::get_custom_model::GetCustomModelError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::get_custom_model::GetCustomModelError::ValidationException(inner) => Error::ValidationException(inner),
            crate::operation::get_custom_model::GetCustomModelError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_evaluation_job::GetEvaluationJobError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_evaluation_job::GetEvaluationJobError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::get_evaluation_job::GetEvaluationJobError> for Error {
    fn from(err: crate::operation::get_evaluation_job::GetEvaluationJobError) -> Self {
        match err {
            crate::operation::get_evaluation_job::GetEvaluationJobError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::get_evaluation_job::GetEvaluationJobError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::get_evaluation_job::GetEvaluationJobError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::get_evaluation_job::GetEvaluationJobError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::get_evaluation_job::GetEvaluationJobError::ValidationException(inner) => Error::ValidationException(inner),
            crate::operation::get_evaluation_job::GetEvaluationJobError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_foundation_model::GetFoundationModelError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_foundation_model::GetFoundationModelError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::get_foundation_model::GetFoundationModelError> for Error {
    fn from(err: crate::operation::get_foundation_model::GetFoundationModelError) -> Self {
        match err {
            crate::operation::get_foundation_model::GetFoundationModelError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::get_foundation_model::GetFoundationModelError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::get_foundation_model::GetFoundationModelError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::get_foundation_model::GetFoundationModelError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::get_foundation_model::GetFoundationModelError::ValidationException(inner) => Error::ValidationException(inner),
            crate::operation::get_foundation_model::GetFoundationModelError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_guardrail::GetGuardrailError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_guardrail::GetGuardrailError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::get_guardrail::GetGuardrailError> for Error {
    fn from(err: crate::operation::get_guardrail::GetGuardrailError) -> Self {
        match err {
            crate::operation::get_guardrail::GetGuardrailError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::get_guardrail::GetGuardrailError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::get_guardrail::GetGuardrailError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::get_guardrail::GetGuardrailError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::get_guardrail::GetGuardrailError::ValidationException(inner) => Error::ValidationException(inner),
            crate::operation::get_guardrail::GetGuardrailError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_model_customization_job::GetModelCustomizationJobError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_model_customization_job::GetModelCustomizationJobError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::get_model_customization_job::GetModelCustomizationJobError> for Error {
    fn from(err: crate::operation::get_model_customization_job::GetModelCustomizationJobError) -> Self {
        match err {
            crate::operation::get_model_customization_job::GetModelCustomizationJobError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::get_model_customization_job::GetModelCustomizationJobError::InternalServerException(inner) => {
                Error::InternalServerException(inner)
            }
            crate::operation::get_model_customization_job::GetModelCustomizationJobError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::get_model_customization_job::GetModelCustomizationJobError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::get_model_customization_job::GetModelCustomizationJobError::ValidationException(inner) => {
                Error::ValidationException(inner)
            }
            crate::operation::get_model_customization_job::GetModelCustomizationJobError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::get_model_invocation_logging_configuration::GetModelInvocationLoggingConfigurationError,
            R,
        >,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::get_model_invocation_logging_configuration::GetModelInvocationLoggingConfigurationError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::get_model_invocation_logging_configuration::GetModelInvocationLoggingConfigurationError> for Error {
    fn from(err: crate::operation::get_model_invocation_logging_configuration::GetModelInvocationLoggingConfigurationError) -> Self {
        match err {
            crate::operation::get_model_invocation_logging_configuration::GetModelInvocationLoggingConfigurationError::AccessDeniedException(
                inner,
            ) => Error::AccessDeniedException(inner),
            crate::operation::get_model_invocation_logging_configuration::GetModelInvocationLoggingConfigurationError::InternalServerException(
                inner,
            ) => Error::InternalServerException(inner),
            crate::operation::get_model_invocation_logging_configuration::GetModelInvocationLoggingConfigurationError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::get_model_invocation_logging_configuration::GetModelInvocationLoggingConfigurationError::Unhandled(inner) => {
                Error::Unhandled(inner)
            }
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::get_provisioned_model_throughput::GetProvisionedModelThroughputError, R>,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::get_provisioned_model_throughput::GetProvisionedModelThroughputError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::get_provisioned_model_throughput::GetProvisionedModelThroughputError> for Error {
    fn from(err: crate::operation::get_provisioned_model_throughput::GetProvisionedModelThroughputError) -> Self {
        match err {
            crate::operation::get_provisioned_model_throughput::GetProvisionedModelThroughputError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::get_provisioned_model_throughput::GetProvisionedModelThroughputError::InternalServerException(inner) => {
                Error::InternalServerException(inner)
            }
            crate::operation::get_provisioned_model_throughput::GetProvisionedModelThroughputError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::get_provisioned_model_throughput::GetProvisionedModelThroughputError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::get_provisioned_model_throughput::GetProvisionedModelThroughputError::ValidationException(inner) => {
                Error::ValidationException(inner)
            }
            crate::operation::get_provisioned_model_throughput::GetProvisionedModelThroughputError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_custom_models::ListCustomModelsError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_custom_models::ListCustomModelsError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::list_custom_models::ListCustomModelsError> for Error {
    fn from(err: crate::operation::list_custom_models::ListCustomModelsError) -> Self {
        match err {
            crate::operation::list_custom_models::ListCustomModelsError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::list_custom_models::ListCustomModelsError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::list_custom_models::ListCustomModelsError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::list_custom_models::ListCustomModelsError::ValidationException(inner) => Error::ValidationException(inner),
            crate::operation::list_custom_models::ListCustomModelsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_evaluation_jobs::ListEvaluationJobsError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_evaluation_jobs::ListEvaluationJobsError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::list_evaluation_jobs::ListEvaluationJobsError> for Error {
    fn from(err: crate::operation::list_evaluation_jobs::ListEvaluationJobsError) -> Self {
        match err {
            crate::operation::list_evaluation_jobs::ListEvaluationJobsError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::list_evaluation_jobs::ListEvaluationJobsError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::list_evaluation_jobs::ListEvaluationJobsError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::list_evaluation_jobs::ListEvaluationJobsError::ValidationException(inner) => Error::ValidationException(inner),
            crate::operation::list_evaluation_jobs::ListEvaluationJobsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_foundation_models::ListFoundationModelsError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_foundation_models::ListFoundationModelsError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::list_foundation_models::ListFoundationModelsError> for Error {
    fn from(err: crate::operation::list_foundation_models::ListFoundationModelsError) -> Self {
        match err {
            crate::operation::list_foundation_models::ListFoundationModelsError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::list_foundation_models::ListFoundationModelsError::InternalServerException(inner) => {
                Error::InternalServerException(inner)
            }
            crate::operation::list_foundation_models::ListFoundationModelsError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::list_foundation_models::ListFoundationModelsError::ValidationException(inner) => Error::ValidationException(inner),
            crate::operation::list_foundation_models::ListFoundationModelsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_guardrails::ListGuardrailsError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_guardrails::ListGuardrailsError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::list_guardrails::ListGuardrailsError> for Error {
    fn from(err: crate::operation::list_guardrails::ListGuardrailsError) -> Self {
        match err {
            crate::operation::list_guardrails::ListGuardrailsError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::list_guardrails::ListGuardrailsError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::list_guardrails::ListGuardrailsError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::list_guardrails::ListGuardrailsError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::list_guardrails::ListGuardrailsError::ValidationException(inner) => Error::ValidationException(inner),
            crate::operation::list_guardrails::ListGuardrailsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_model_customization_jobs::ListModelCustomizationJobsError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_model_customization_jobs::ListModelCustomizationJobsError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::list_model_customization_jobs::ListModelCustomizationJobsError> for Error {
    fn from(err: crate::operation::list_model_customization_jobs::ListModelCustomizationJobsError) -> Self {
        match err {
            crate::operation::list_model_customization_jobs::ListModelCustomizationJobsError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::list_model_customization_jobs::ListModelCustomizationJobsError::InternalServerException(inner) => {
                Error::InternalServerException(inner)
            }
            crate::operation::list_model_customization_jobs::ListModelCustomizationJobsError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::list_model_customization_jobs::ListModelCustomizationJobsError::ValidationException(inner) => {
                Error::ValidationException(inner)
            }
            crate::operation::list_model_customization_jobs::ListModelCustomizationJobsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::list_provisioned_model_throughputs::ListProvisionedModelThroughputsError,
            R,
        >,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::list_provisioned_model_throughputs::ListProvisionedModelThroughputsError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::list_provisioned_model_throughputs::ListProvisionedModelThroughputsError> for Error {
    fn from(err: crate::operation::list_provisioned_model_throughputs::ListProvisionedModelThroughputsError) -> Self {
        match err {
            crate::operation::list_provisioned_model_throughputs::ListProvisionedModelThroughputsError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::list_provisioned_model_throughputs::ListProvisionedModelThroughputsError::InternalServerException(inner) => {
                Error::InternalServerException(inner)
            }
            crate::operation::list_provisioned_model_throughputs::ListProvisionedModelThroughputsError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::list_provisioned_model_throughputs::ListProvisionedModelThroughputsError::ValidationException(inner) => {
                Error::ValidationException(inner)
            }
            crate::operation::list_provisioned_model_throughputs::ListProvisionedModelThroughputsError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_tags_for_resource::ListTagsForResourceError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::list_tags_for_resource::ListTagsForResourceError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::list_tags_for_resource::ListTagsForResourceError> for Error {
    fn from(err: crate::operation::list_tags_for_resource::ListTagsForResourceError) -> Self {
        match err {
            crate::operation::list_tags_for_resource::ListTagsForResourceError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::list_tags_for_resource::ListTagsForResourceError::InternalServerException(inner) => {
                Error::InternalServerException(inner)
            }
            crate::operation::list_tags_for_resource::ListTagsForResourceError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::list_tags_for_resource::ListTagsForResourceError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::list_tags_for_resource::ListTagsForResourceError::ValidationException(inner) => Error::ValidationException(inner),
            crate::operation::list_tags_for_resource::ListTagsForResourceError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::put_model_invocation_logging_configuration::PutModelInvocationLoggingConfigurationError,
            R,
        >,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::put_model_invocation_logging_configuration::PutModelInvocationLoggingConfigurationError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::put_model_invocation_logging_configuration::PutModelInvocationLoggingConfigurationError> for Error {
    fn from(err: crate::operation::put_model_invocation_logging_configuration::PutModelInvocationLoggingConfigurationError) -> Self {
        match err {
            crate::operation::put_model_invocation_logging_configuration::PutModelInvocationLoggingConfigurationError::AccessDeniedException(
                inner,
            ) => Error::AccessDeniedException(inner),
            crate::operation::put_model_invocation_logging_configuration::PutModelInvocationLoggingConfigurationError::InternalServerException(
                inner,
            ) => Error::InternalServerException(inner),
            crate::operation::put_model_invocation_logging_configuration::PutModelInvocationLoggingConfigurationError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::put_model_invocation_logging_configuration::PutModelInvocationLoggingConfigurationError::ValidationException(inner) => {
                Error::ValidationException(inner)
            }
            crate::operation::put_model_invocation_logging_configuration::PutModelInvocationLoggingConfigurationError::Unhandled(inner) => {
                Error::Unhandled(inner)
            }
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::stop_evaluation_job::StopEvaluationJobError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::stop_evaluation_job::StopEvaluationJobError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::stop_evaluation_job::StopEvaluationJobError> for Error {
    fn from(err: crate::operation::stop_evaluation_job::StopEvaluationJobError) -> Self {
        match err {
            crate::operation::stop_evaluation_job::StopEvaluationJobError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::stop_evaluation_job::StopEvaluationJobError::ConflictException(inner) => Error::ConflictException(inner),
            crate::operation::stop_evaluation_job::StopEvaluationJobError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::stop_evaluation_job::StopEvaluationJobError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::stop_evaluation_job::StopEvaluationJobError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::stop_evaluation_job::StopEvaluationJobError::ValidationException(inner) => Error::ValidationException(inner),
            crate::operation::stop_evaluation_job::StopEvaluationJobError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::stop_model_customization_job::StopModelCustomizationJobError, R>>
    for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::stop_model_customization_job::StopModelCustomizationJobError, R>,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::stop_model_customization_job::StopModelCustomizationJobError> for Error {
    fn from(err: crate::operation::stop_model_customization_job::StopModelCustomizationJobError) -> Self {
        match err {
            crate::operation::stop_model_customization_job::StopModelCustomizationJobError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::stop_model_customization_job::StopModelCustomizationJobError::ConflictException(inner) => {
                Error::ConflictException(inner)
            }
            crate::operation::stop_model_customization_job::StopModelCustomizationJobError::InternalServerException(inner) => {
                Error::InternalServerException(inner)
            }
            crate::operation::stop_model_customization_job::StopModelCustomizationJobError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::stop_model_customization_job::StopModelCustomizationJobError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::stop_model_customization_job::StopModelCustomizationJobError::ValidationException(inner) => {
                Error::ValidationException(inner)
            }
            crate::operation::stop_model_customization_job::StopModelCustomizationJobError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::tag_resource::TagResourceError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::tag_resource::TagResourceError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::tag_resource::TagResourceError> for Error {
    fn from(err: crate::operation::tag_resource::TagResourceError) -> Self {
        match err {
            crate::operation::tag_resource::TagResourceError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::tag_resource::TagResourceError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::tag_resource::TagResourceError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::tag_resource::TagResourceError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::tag_resource::TagResourceError::TooManyTagsException(inner) => Error::TooManyTagsException(inner),
            crate::operation::tag_resource::TagResourceError::ValidationException(inner) => Error::ValidationException(inner),
            crate::operation::tag_resource::TagResourceError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::untag_resource::UntagResourceError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::untag_resource::UntagResourceError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::untag_resource::UntagResourceError> for Error {
    fn from(err: crate::operation::untag_resource::UntagResourceError) -> Self {
        match err {
            crate::operation::untag_resource::UntagResourceError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::untag_resource::UntagResourceError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::untag_resource::UntagResourceError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::untag_resource::UntagResourceError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::untag_resource::UntagResourceError::ValidationException(inner) => Error::ValidationException(inner),
            crate::operation::untag_resource::UntagResourceError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R> From<::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_guardrail::UpdateGuardrailError, R>> for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(err: ::aws_smithy_runtime_api::client::result::SdkError<crate::operation::update_guardrail::UpdateGuardrailError, R>) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::update_guardrail::UpdateGuardrailError> for Error {
    fn from(err: crate::operation::update_guardrail::UpdateGuardrailError) -> Self {
        match err {
            crate::operation::update_guardrail::UpdateGuardrailError::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
            crate::operation::update_guardrail::UpdateGuardrailError::ConflictException(inner) => Error::ConflictException(inner),
            crate::operation::update_guardrail::UpdateGuardrailError::InternalServerException(inner) => Error::InternalServerException(inner),
            crate::operation::update_guardrail::UpdateGuardrailError::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
            crate::operation::update_guardrail::UpdateGuardrailError::ServiceQuotaExceededException(inner) => {
                Error::ServiceQuotaExceededException(inner)
            }
            crate::operation::update_guardrail::UpdateGuardrailError::ThrottlingException(inner) => Error::ThrottlingException(inner),
            crate::operation::update_guardrail::UpdateGuardrailError::ValidationException(inner) => Error::ValidationException(inner),
            crate::operation::update_guardrail::UpdateGuardrailError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl<R>
    From<
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::update_provisioned_model_throughput::UpdateProvisionedModelThroughputError,
            R,
        >,
    > for Error
where
    R: Send + Sync + std::fmt::Debug + 'static,
{
    fn from(
        err: ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::update_provisioned_model_throughput::UpdateProvisionedModelThroughputError,
            R,
        >,
    ) -> Self {
        match err {
            ::aws_smithy_runtime_api::client::result::SdkError::ServiceError(context) => Self::from(context.into_err()),
            _ => Error::Unhandled(crate::error::sealed_unhandled::Unhandled {
                meta: ::aws_smithy_types::error::metadata::ProvideErrorMetadata::meta(&err).clone(),
                source: err.into(),
            }),
        }
    }
}
impl From<crate::operation::update_provisioned_model_throughput::UpdateProvisionedModelThroughputError> for Error {
    fn from(err: crate::operation::update_provisioned_model_throughput::UpdateProvisionedModelThroughputError) -> Self {
        match err {
            crate::operation::update_provisioned_model_throughput::UpdateProvisionedModelThroughputError::AccessDeniedException(inner) => {
                Error::AccessDeniedException(inner)
            }
            crate::operation::update_provisioned_model_throughput::UpdateProvisionedModelThroughputError::InternalServerException(inner) => {
                Error::InternalServerException(inner)
            }
            crate::operation::update_provisioned_model_throughput::UpdateProvisionedModelThroughputError::ResourceNotFoundException(inner) => {
                Error::ResourceNotFoundException(inner)
            }
            crate::operation::update_provisioned_model_throughput::UpdateProvisionedModelThroughputError::ThrottlingException(inner) => {
                Error::ThrottlingException(inner)
            }
            crate::operation::update_provisioned_model_throughput::UpdateProvisionedModelThroughputError::ValidationException(inner) => {
                Error::ValidationException(inner)
            }
            crate::operation::update_provisioned_model_throughput::UpdateProvisionedModelThroughputError::Unhandled(inner) => Error::Unhandled(inner),
        }
    }
}
impl ::std::error::Error for Error {
    fn source(&self) -> std::option::Option<&(dyn ::std::error::Error + 'static)> {
        match self {
            Error::AccessDeniedException(inner) => inner.source(),
            Error::ConflictException(inner) => inner.source(),
            Error::InternalServerException(inner) => inner.source(),
            Error::ResourceNotFoundException(inner) => inner.source(),
            Error::ServiceQuotaExceededException(inner) => inner.source(),
            Error::ThrottlingException(inner) => inner.source(),
            Error::TooManyTagsException(inner) => inner.source(),
            Error::ValidationException(inner) => inner.source(),
            Error::Unhandled(inner) => ::std::option::Option::Some(&*inner.source),
        }
    }
}
impl ::aws_types::request_id::RequestId for Error {
    fn request_id(&self) -> Option<&str> {
        match self {
            Self::AccessDeniedException(e) => e.request_id(),
            Self::ConflictException(e) => e.request_id(),
            Self::InternalServerException(e) => e.request_id(),
            Self::ResourceNotFoundException(e) => e.request_id(),
            Self::ServiceQuotaExceededException(e) => e.request_id(),
            Self::ThrottlingException(e) => e.request_id(),
            Self::TooManyTagsException(e) => e.request_id(),
            Self::ValidationException(e) => e.request_id(),
            Self::Unhandled(e) => e.meta.request_id(),
        }
    }
}
