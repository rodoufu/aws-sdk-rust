// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The regular expression to configure for the guardrail.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GuardrailRegexConfig {
    /// <p>The name of the regular expression to configure for the guardrail.</p>
    pub name: ::std::string::String,
    /// <p>The description of the regular expression to configure for the guardrail.</p>
    pub description: ::std::option::Option<::std::string::String>,
    /// <p>The regular expression pattern to configure for the guardrail.</p>
    pub pattern: ::std::string::String,
    /// <p>The guardrail action to configure when matching regular expression is detected.</p>
    pub action: crate::types::GuardrailSensitiveInformationAction,
}
impl GuardrailRegexConfig {
    /// <p>The name of the regular expression to configure for the guardrail.</p>
    pub fn name(&self) -> &str {
        use std::ops::Deref;
        self.name.deref()
    }
    /// <p>The description of the regular expression to configure for the guardrail.</p>
    pub fn description(&self) -> ::std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>The regular expression pattern to configure for the guardrail.</p>
    pub fn pattern(&self) -> &str {
        use std::ops::Deref;
        self.pattern.deref()
    }
    /// <p>The guardrail action to configure when matching regular expression is detected.</p>
    pub fn action(&self) -> &crate::types::GuardrailSensitiveInformationAction {
        &self.action
    }
}
impl GuardrailRegexConfig {
    /// Creates a new builder-style object to manufacture [`GuardrailRegexConfig`](crate::types::GuardrailRegexConfig).
    pub fn builder() -> crate::types::builders::GuardrailRegexConfigBuilder {
        crate::types::builders::GuardrailRegexConfigBuilder::default()
    }
}

/// A builder for [`GuardrailRegexConfig`](crate::types::GuardrailRegexConfig).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GuardrailRegexConfigBuilder {
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) description: ::std::option::Option<::std::string::String>,
    pub(crate) pattern: ::std::option::Option<::std::string::String>,
    pub(crate) action: ::std::option::Option<crate::types::GuardrailSensitiveInformationAction>,
}
impl GuardrailRegexConfigBuilder {
    /// <p>The name of the regular expression to configure for the guardrail.</p>
    /// This field is required.
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the regular expression to configure for the guardrail.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name of the regular expression to configure for the guardrail.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>The description of the regular expression to configure for the guardrail.</p>
    pub fn description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The description of the regular expression to configure for the guardrail.</p>
    pub fn set_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>The description of the regular expression to configure for the guardrail.</p>
    pub fn get_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.description
    }
    /// <p>The regular expression pattern to configure for the guardrail.</p>
    /// This field is required.
    pub fn pattern(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.pattern = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The regular expression pattern to configure for the guardrail.</p>
    pub fn set_pattern(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.pattern = input;
        self
    }
    /// <p>The regular expression pattern to configure for the guardrail.</p>
    pub fn get_pattern(&self) -> &::std::option::Option<::std::string::String> {
        &self.pattern
    }
    /// <p>The guardrail action to configure when matching regular expression is detected.</p>
    /// This field is required.
    pub fn action(mut self, input: crate::types::GuardrailSensitiveInformationAction) -> Self {
        self.action = ::std::option::Option::Some(input);
        self
    }
    /// <p>The guardrail action to configure when matching regular expression is detected.</p>
    pub fn set_action(mut self, input: ::std::option::Option<crate::types::GuardrailSensitiveInformationAction>) -> Self {
        self.action = input;
        self
    }
    /// <p>The guardrail action to configure when matching regular expression is detected.</p>
    pub fn get_action(&self) -> &::std::option::Option<crate::types::GuardrailSensitiveInformationAction> {
        &self.action
    }
    /// Consumes the builder and constructs a [`GuardrailRegexConfig`](crate::types::GuardrailRegexConfig).
    /// This method will fail if any of the following fields are not set:
    /// - [`name`](crate::types::builders::GuardrailRegexConfigBuilder::name)
    /// - [`pattern`](crate::types::builders::GuardrailRegexConfigBuilder::pattern)
    /// - [`action`](crate::types::builders::GuardrailRegexConfigBuilder::action)
    pub fn build(self) -> ::std::result::Result<crate::types::GuardrailRegexConfig, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::GuardrailRegexConfig {
            name: self.name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "name",
                    "name was not specified but it is required when building GuardrailRegexConfig",
                )
            })?,
            description: self.description,
            pattern: self.pattern.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "pattern",
                    "pattern was not specified but it is required when building GuardrailRegexConfig",
                )
            })?,
            action: self.action.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "action",
                    "action was not specified but it is required when building GuardrailRegexConfig",
                )
            })?,
        })
    }
}
