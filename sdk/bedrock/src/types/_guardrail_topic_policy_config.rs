// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains details about topics that the guardrail should identify and deny.</p>
/// <p>This data type is used in the following API operations:</p>
/// <ul>
/// <li>
/// <p><a href="https://docs.aws.amazon.com/bedrock/latest/APIReference/API_CreateGuardrail.html#API_CreateGuardrail_RequestSyntax">CreateGuardrail request body</a></p></li>
/// <li>
/// <p><a href="https://docs.aws.amazon.com/bedrock/latest/APIReference/API_UpdateGuardrail.html#API_UpdateGuardrail_RequestSyntax">UpdateGuardrail request body</a></p></li>
/// </ul>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GuardrailTopicPolicyConfig {
    /// <p>A list of policies related to topics that the guardrail should deny.</p>
    pub topics_config: ::std::vec::Vec<crate::types::GuardrailTopicConfig>,
}
impl GuardrailTopicPolicyConfig {
    /// <p>A list of policies related to topics that the guardrail should deny.</p>
    pub fn topics_config(&self) -> &[crate::types::GuardrailTopicConfig] {
        use std::ops::Deref;
        self.topics_config.deref()
    }
}
impl GuardrailTopicPolicyConfig {
    /// Creates a new builder-style object to manufacture [`GuardrailTopicPolicyConfig`](crate::types::GuardrailTopicPolicyConfig).
    pub fn builder() -> crate::types::builders::GuardrailTopicPolicyConfigBuilder {
        crate::types::builders::GuardrailTopicPolicyConfigBuilder::default()
    }
}

/// A builder for [`GuardrailTopicPolicyConfig`](crate::types::GuardrailTopicPolicyConfig).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GuardrailTopicPolicyConfigBuilder {
    pub(crate) topics_config: ::std::option::Option<::std::vec::Vec<crate::types::GuardrailTopicConfig>>,
}
impl GuardrailTopicPolicyConfigBuilder {
    /// Appends an item to `topics_config`.
    ///
    /// To override the contents of this collection use [`set_topics_config`](Self::set_topics_config).
    ///
    /// <p>A list of policies related to topics that the guardrail should deny.</p>
    pub fn topics_config(mut self, input: crate::types::GuardrailTopicConfig) -> Self {
        let mut v = self.topics_config.unwrap_or_default();
        v.push(input);
        self.topics_config = ::std::option::Option::Some(v);
        self
    }
    /// <p>A list of policies related to topics that the guardrail should deny.</p>
    pub fn set_topics_config(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::GuardrailTopicConfig>>) -> Self {
        self.topics_config = input;
        self
    }
    /// <p>A list of policies related to topics that the guardrail should deny.</p>
    pub fn get_topics_config(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::GuardrailTopicConfig>> {
        &self.topics_config
    }
    /// Consumes the builder and constructs a [`GuardrailTopicPolicyConfig`](crate::types::GuardrailTopicPolicyConfig).
    /// This method will fail if any of the following fields are not set:
    /// - [`topics_config`](crate::types::builders::GuardrailTopicPolicyConfigBuilder::topics_config)
    pub fn build(self) -> ::std::result::Result<crate::types::GuardrailTopicPolicyConfig, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::GuardrailTopicPolicyConfig {
            topics_config: self.topics_config.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "topics_config",
                    "topics_config was not specified but it is required when building GuardrailTopicPolicyConfig",
                )
            })?,
        })
    }
}
