// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains <code>SageMakerFlowDefinition</code> object. The object is used to specify the prompt dataset, task type, rating method and metric names.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct HumanWorkflowConfig {
    /// <p>The Amazon Resource Number (ARN) for the flow definition</p>
    pub flow_definition_arn: ::std::string::String,
    /// <p>Instructions for the flow definition</p>
    pub instructions: ::std::option::Option<::std::string::String>,
}
impl HumanWorkflowConfig {
    /// <p>The Amazon Resource Number (ARN) for the flow definition</p>
    pub fn flow_definition_arn(&self) -> &str {
        use std::ops::Deref;
        self.flow_definition_arn.deref()
    }
    /// <p>Instructions for the flow definition</p>
    pub fn instructions(&self) -> ::std::option::Option<&str> {
        self.instructions.as_deref()
    }
}
impl ::std::fmt::Debug for HumanWorkflowConfig {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("HumanWorkflowConfig");
        formatter.field("flow_definition_arn", &self.flow_definition_arn);
        formatter.field("instructions", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
impl HumanWorkflowConfig {
    /// Creates a new builder-style object to manufacture [`HumanWorkflowConfig`](crate::types::HumanWorkflowConfig).
    pub fn builder() -> crate::types::builders::HumanWorkflowConfigBuilder {
        crate::types::builders::HumanWorkflowConfigBuilder::default()
    }
}

/// A builder for [`HumanWorkflowConfig`](crate::types::HumanWorkflowConfig).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
pub struct HumanWorkflowConfigBuilder {
    pub(crate) flow_definition_arn: ::std::option::Option<::std::string::String>,
    pub(crate) instructions: ::std::option::Option<::std::string::String>,
}
impl HumanWorkflowConfigBuilder {
    /// <p>The Amazon Resource Number (ARN) for the flow definition</p>
    /// This field is required.
    pub fn flow_definition_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.flow_definition_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Number (ARN) for the flow definition</p>
    pub fn set_flow_definition_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.flow_definition_arn = input;
        self
    }
    /// <p>The Amazon Resource Number (ARN) for the flow definition</p>
    pub fn get_flow_definition_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.flow_definition_arn
    }
    /// <p>Instructions for the flow definition</p>
    pub fn instructions(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.instructions = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Instructions for the flow definition</p>
    pub fn set_instructions(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.instructions = input;
        self
    }
    /// <p>Instructions for the flow definition</p>
    pub fn get_instructions(&self) -> &::std::option::Option<::std::string::String> {
        &self.instructions
    }
    /// Consumes the builder and constructs a [`HumanWorkflowConfig`](crate::types::HumanWorkflowConfig).
    /// This method will fail if any of the following fields are not set:
    /// - [`flow_definition_arn`](crate::types::builders::HumanWorkflowConfigBuilder::flow_definition_arn)
    pub fn build(self) -> ::std::result::Result<crate::types::HumanWorkflowConfig, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::HumanWorkflowConfig {
            flow_definition_arn: self.flow_definition_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "flow_definition_arn",
                    "flow_definition_arn was not specified but it is required when building HumanWorkflowConfig",
                )
            })?,
            instructions: self.instructions,
        })
    }
}
impl ::std::fmt::Debug for HumanWorkflowConfigBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("HumanWorkflowConfigBuilder");
        formatter.field("flow_definition_arn", &self.flow_definition_arn);
        formatter.field("instructions", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
