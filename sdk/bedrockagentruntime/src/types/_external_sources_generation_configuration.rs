// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains the generation configuration of the external source wrapper object.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ExternalSourcesGenerationConfiguration {
    /// <p>Contain the textPromptTemplate string for the external source wrapper object.</p>
    pub prompt_template: ::std::option::Option<crate::types::PromptTemplate>,
}
impl ExternalSourcesGenerationConfiguration {
    /// <p>Contain the textPromptTemplate string for the external source wrapper object.</p>
    pub fn prompt_template(&self) -> ::std::option::Option<&crate::types::PromptTemplate> {
        self.prompt_template.as_ref()
    }
}
impl ExternalSourcesGenerationConfiguration {
    /// Creates a new builder-style object to manufacture [`ExternalSourcesGenerationConfiguration`](crate::types::ExternalSourcesGenerationConfiguration).
    pub fn builder() -> crate::types::builders::ExternalSourcesGenerationConfigurationBuilder {
        crate::types::builders::ExternalSourcesGenerationConfigurationBuilder::default()
    }
}

/// A builder for [`ExternalSourcesGenerationConfiguration`](crate::types::ExternalSourcesGenerationConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ExternalSourcesGenerationConfigurationBuilder {
    pub(crate) prompt_template: ::std::option::Option<crate::types::PromptTemplate>,
}
impl ExternalSourcesGenerationConfigurationBuilder {
    /// <p>Contain the textPromptTemplate string for the external source wrapper object.</p>
    pub fn prompt_template(mut self, input: crate::types::PromptTemplate) -> Self {
        self.prompt_template = ::std::option::Option::Some(input);
        self
    }
    /// <p>Contain the textPromptTemplate string for the external source wrapper object.</p>
    pub fn set_prompt_template(mut self, input: ::std::option::Option<crate::types::PromptTemplate>) -> Self {
        self.prompt_template = input;
        self
    }
    /// <p>Contain the textPromptTemplate string for the external source wrapper object.</p>
    pub fn get_prompt_template(&self) -> &::std::option::Option<crate::types::PromptTemplate> {
        &self.prompt_template
    }
    /// Consumes the builder and constructs a [`ExternalSourcesGenerationConfiguration`](crate::types::ExternalSourcesGenerationConfiguration).
    pub fn build(self) -> crate::types::ExternalSourcesGenerationConfiguration {
        crate::types::ExternalSourcesGenerationConfiguration {
            prompt_template: self.prompt_template,
        }
    }
}
