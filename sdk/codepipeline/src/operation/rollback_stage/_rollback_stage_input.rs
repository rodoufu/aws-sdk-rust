// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RollbackStageInput {
    /// <p>The name of the pipeline for which the stage will be rolled back.</p>
    pub pipeline_name: ::std::option::Option<::std::string::String>,
    /// <p>The name of the stage in the pipeline to be rolled back.</p>
    pub stage_name: ::std::option::Option<::std::string::String>,
    /// <p>The pipeline execution ID for the stage to be rolled back to.</p>
    pub target_pipeline_execution_id: ::std::option::Option<::std::string::String>,
}
impl RollbackStageInput {
    /// <p>The name of the pipeline for which the stage will be rolled back.</p>
    pub fn pipeline_name(&self) -> ::std::option::Option<&str> {
        self.pipeline_name.as_deref()
    }
    /// <p>The name of the stage in the pipeline to be rolled back.</p>
    pub fn stage_name(&self) -> ::std::option::Option<&str> {
        self.stage_name.as_deref()
    }
    /// <p>The pipeline execution ID for the stage to be rolled back to.</p>
    pub fn target_pipeline_execution_id(&self) -> ::std::option::Option<&str> {
        self.target_pipeline_execution_id.as_deref()
    }
}
impl RollbackStageInput {
    /// Creates a new builder-style object to manufacture [`RollbackStageInput`](crate::operation::rollback_stage::RollbackStageInput).
    pub fn builder() -> crate::operation::rollback_stage::builders::RollbackStageInputBuilder {
        crate::operation::rollback_stage::builders::RollbackStageInputBuilder::default()
    }
}

/// A builder for [`RollbackStageInput`](crate::operation::rollback_stage::RollbackStageInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct RollbackStageInputBuilder {
    pub(crate) pipeline_name: ::std::option::Option<::std::string::String>,
    pub(crate) stage_name: ::std::option::Option<::std::string::String>,
    pub(crate) target_pipeline_execution_id: ::std::option::Option<::std::string::String>,
}
impl RollbackStageInputBuilder {
    /// <p>The name of the pipeline for which the stage will be rolled back.</p>
    /// This field is required.
    pub fn pipeline_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.pipeline_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the pipeline for which the stage will be rolled back.</p>
    pub fn set_pipeline_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.pipeline_name = input;
        self
    }
    /// <p>The name of the pipeline for which the stage will be rolled back.</p>
    pub fn get_pipeline_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.pipeline_name
    }
    /// <p>The name of the stage in the pipeline to be rolled back.</p>
    /// This field is required.
    pub fn stage_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.stage_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the stage in the pipeline to be rolled back.</p>
    pub fn set_stage_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.stage_name = input;
        self
    }
    /// <p>The name of the stage in the pipeline to be rolled back.</p>
    pub fn get_stage_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.stage_name
    }
    /// <p>The pipeline execution ID for the stage to be rolled back to.</p>
    /// This field is required.
    pub fn target_pipeline_execution_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.target_pipeline_execution_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The pipeline execution ID for the stage to be rolled back to.</p>
    pub fn set_target_pipeline_execution_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.target_pipeline_execution_id = input;
        self
    }
    /// <p>The pipeline execution ID for the stage to be rolled back to.</p>
    pub fn get_target_pipeline_execution_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.target_pipeline_execution_id
    }
    /// Consumes the builder and constructs a [`RollbackStageInput`](crate::operation::rollback_stage::RollbackStageInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::rollback_stage::RollbackStageInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::rollback_stage::RollbackStageInput {
            pipeline_name: self.pipeline_name,
            stage_name: self.stage_name,
            target_pipeline_execution_id: self.target_pipeline_execution_id,
        })
    }
}
