// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateTask`](crate::operation::update_task::builders::UpdateTaskFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`task_arn(impl Into<String>)`](crate::operation::update_task::builders::UpdateTaskFluentBuilder::task_arn) / [`set_task_arn(Option<String>)`](crate::operation::update_task::builders::UpdateTaskFluentBuilder::set_task_arn):<br>required: **true**<br><p>Specifies the ARN of the task that you want to update.</p><br>
    ///   - [`options(Options)`](crate::operation::update_task::builders::UpdateTaskFluentBuilder::options) / [`set_options(Option<Options>)`](crate::operation::update_task::builders::UpdateTaskFluentBuilder::set_options):<br>required: **false**<br><p>Indicates how your transfer task is configured. These options include how DataSync handles files, objects, and their associated metadata during your transfer. You also can specify how to verify data integrity, set bandwidth limits for your task, among other options.</p> <p>Each option has a default value. Unless you need to, you don't have to configure any option before calling <a href="https://docs.aws.amazon.com/datasync/latest/userguide/API_StartTaskExecution.html">StartTaskExecution</a>.</p> <p>You also can override your task options for each task execution. For example, you might want to adjust the <code>LogLevel</code> for an individual execution.</p><br>
    ///   - [`excludes(FilterRule)`](crate::operation::update_task::builders::UpdateTaskFluentBuilder::excludes) / [`set_excludes(Option<Vec::<FilterRule>>)`](crate::operation::update_task::builders::UpdateTaskFluentBuilder::set_excludes):<br>required: **false**<br><p>Specifies exclude filters that define the files, objects, and folders in your source location that you don't want DataSync to transfer. For more information and examples, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/filtering.html">Specifying what DataSync transfers by using filters</a>.</p><br>
    ///   - [`schedule(TaskSchedule)`](crate::operation::update_task::builders::UpdateTaskFluentBuilder::schedule) / [`set_schedule(Option<TaskSchedule>)`](crate::operation::update_task::builders::UpdateTaskFluentBuilder::set_schedule):<br>required: **false**<br><p>Specifies a schedule for when you want your task to run. For more information, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/task-scheduling.html">Scheduling your task</a>.</p><br>
    ///   - [`name(impl Into<String>)`](crate::operation::update_task::builders::UpdateTaskFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::update_task::builders::UpdateTaskFluentBuilder::set_name):<br>required: **false**<br><p>Specifies the name of your task.</p><br>
    ///   - [`cloud_watch_log_group_arn(impl Into<String>)`](crate::operation::update_task::builders::UpdateTaskFluentBuilder::cloud_watch_log_group_arn) / [`set_cloud_watch_log_group_arn(Option<String>)`](crate::operation::update_task::builders::UpdateTaskFluentBuilder::set_cloud_watch_log_group_arn):<br>required: **false**<br><p>Specifies the Amazon Resource Name (ARN) of an Amazon CloudWatch log group for monitoring your task.</p><br>
    ///   - [`includes(FilterRule)`](crate::operation::update_task::builders::UpdateTaskFluentBuilder::includes) / [`set_includes(Option<Vec::<FilterRule>>)`](crate::operation::update_task::builders::UpdateTaskFluentBuilder::set_includes):<br>required: **false**<br><p>Specifies include filters define the files, objects, and folders in your source location that you want DataSync to transfer. For more information and examples, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/filtering.html">Specifying what DataSync transfers by using filters</a>.</p><br>
    ///   - [`manifest_config(ManifestConfig)`](crate::operation::update_task::builders::UpdateTaskFluentBuilder::manifest_config) / [`set_manifest_config(Option<ManifestConfig>)`](crate::operation::update_task::builders::UpdateTaskFluentBuilder::set_manifest_config):<br>required: **false**<br><p>Configures a manifest, which is a list of files or objects that you want DataSync to transfer. For more information and configuration examples, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/transferring-with-manifest.html">Specifying what DataSync transfers by using a manifest</a>.</p> <p>When using this parameter, your caller identity (the IAM role that you're using DataSync with) must have the <code>iam:PassRole</code> permission. The <a href="https://docs.aws.amazon.com/datasync/latest/userguide/security-iam-awsmanpol.html#security-iam-awsmanpol-awsdatasyncfullaccess">AWSDataSyncFullAccess</a> policy includes this permission.</p> <p>To remove a manifest configuration, specify this parameter as empty.</p><br>
    ///   - [`task_report_config(TaskReportConfig)`](crate::operation::update_task::builders::UpdateTaskFluentBuilder::task_report_config) / [`set_task_report_config(Option<TaskReportConfig>)`](crate::operation::update_task::builders::UpdateTaskFluentBuilder::set_task_report_config):<br>required: **false**<br><p>Specifies how you want to configure a task report, which provides detailed information about your DataSync transfer. For more information, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/task-reports.html">Monitoring your DataSync transfers with task reports</a>.</p> <p>When using this parameter, your caller identity (the IAM role that you're using DataSync with) must have the <code>iam:PassRole</code> permission. The <a href="https://docs.aws.amazon.com/datasync/latest/userguide/security-iam-awsmanpol.html#security-iam-awsmanpol-awsdatasyncfullaccess">AWSDataSyncFullAccess</a> policy includes this permission.</p> <p>To remove a task report configuration, specify this parameter as empty.</p><br>
    /// - On success, responds with [`UpdateTaskOutput`](crate::operation::update_task::UpdateTaskOutput)
    /// - On failure, responds with [`SdkError<UpdateTaskError>`](crate::operation::update_task::UpdateTaskError)
    pub fn update_task(&self) -> crate::operation::update_task::builders::UpdateTaskFluentBuilder {
        crate::operation::update_task::builders::UpdateTaskFluentBuilder::new(self.handle.clone())
    }
}
