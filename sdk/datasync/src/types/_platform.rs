// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The platform-related details about the DataSync agent, such as the version number.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct Platform {
    /// <p>The version of the DataSync agent.</p>
    pub version: ::std::option::Option<::std::string::String>,
}
impl Platform {
    /// <p>The version of the DataSync agent.</p>
    pub fn version(&self) -> ::std::option::Option<&str> {
        self.version.as_deref()
    }
}
impl Platform {
    /// Creates a new builder-style object to manufacture [`Platform`](crate::types::Platform).
    pub fn builder() -> crate::types::builders::PlatformBuilder {
        crate::types::builders::PlatformBuilder::default()
    }
}

/// A builder for [`Platform`](crate::types::Platform).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct PlatformBuilder {
    pub(crate) version: ::std::option::Option<::std::string::String>,
}
impl PlatformBuilder {
    /// <p>The version of the DataSync agent.</p>
    pub fn version(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.version = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The version of the DataSync agent.</p>
    pub fn set_version(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.version = input;
        self
    }
    /// <p>The version of the DataSync agent.</p>
    pub fn get_version(&self) -> &::std::option::Option<::std::string::String> {
        &self.version
    }
    /// Consumes the builder and constructs a [`Platform`](crate::types::Platform).
    pub fn build(self) -> crate::types::Platform {
        crate::types::Platform { version: self.version }
    }
}
