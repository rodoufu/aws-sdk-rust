// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides information about your DataSync <a href="https://docs.aws.amazon.com/datasync/latest/userguide/task-scheduling.html">task schedule</a>.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct TaskScheduleDetails {
    /// <p>Indicates the last time the status of your task schedule changed. For example, if DataSync automatically disables your schedule because of a repeated error, you can see when the schedule was disabled.</p>
    pub status_update_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>Provides a reason if the task schedule is disabled.</p>
    /// <p>If your schedule is disabled by <code>USER</code>, you see a <code>Manually disabled by user.</code> message.</p>
    /// <p>If your schedule is disabled by <code>SERVICE</code>, you see an error message to help you understand why the task keeps failing. For information on resolving DataSync errors, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/troubleshooting-datasync-locations-tasks.html">Troubleshooting issues with DataSync transfers</a>.</p>
    pub disabled_reason: ::std::option::Option<::std::string::String>,
    /// <p>Indicates how your task schedule was disabled.</p>
    /// <ul>
    /// <li>
    /// <p><code>USER</code> - Your schedule was manually disabled by using the <a href="https://docs.aws.amazon.com/datasync/latest/userguide/API_UpdateTask.html">UpdateTask</a> operation or DataSync console.</p></li>
    /// <li>
    /// <p><code>SERVICE</code> - Your schedule was automatically disabled by DataSync because the task failed repeatedly with the same error.</p></li>
    /// </ul>
    pub disabled_by: ::std::option::Option<crate::types::ScheduleDisabledBy>,
}
impl TaskScheduleDetails {
    /// <p>Indicates the last time the status of your task schedule changed. For example, if DataSync automatically disables your schedule because of a repeated error, you can see when the schedule was disabled.</p>
    pub fn status_update_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.status_update_time.as_ref()
    }
    /// <p>Provides a reason if the task schedule is disabled.</p>
    /// <p>If your schedule is disabled by <code>USER</code>, you see a <code>Manually disabled by user.</code> message.</p>
    /// <p>If your schedule is disabled by <code>SERVICE</code>, you see an error message to help you understand why the task keeps failing. For information on resolving DataSync errors, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/troubleshooting-datasync-locations-tasks.html">Troubleshooting issues with DataSync transfers</a>.</p>
    pub fn disabled_reason(&self) -> ::std::option::Option<&str> {
        self.disabled_reason.as_deref()
    }
    /// <p>Indicates how your task schedule was disabled.</p>
    /// <ul>
    /// <li>
    /// <p><code>USER</code> - Your schedule was manually disabled by using the <a href="https://docs.aws.amazon.com/datasync/latest/userguide/API_UpdateTask.html">UpdateTask</a> operation or DataSync console.</p></li>
    /// <li>
    /// <p><code>SERVICE</code> - Your schedule was automatically disabled by DataSync because the task failed repeatedly with the same error.</p></li>
    /// </ul>
    pub fn disabled_by(&self) -> ::std::option::Option<&crate::types::ScheduleDisabledBy> {
        self.disabled_by.as_ref()
    }
}
impl TaskScheduleDetails {
    /// Creates a new builder-style object to manufacture [`TaskScheduleDetails`](crate::types::TaskScheduleDetails).
    pub fn builder() -> crate::types::builders::TaskScheduleDetailsBuilder {
        crate::types::builders::TaskScheduleDetailsBuilder::default()
    }
}

/// A builder for [`TaskScheduleDetails`](crate::types::TaskScheduleDetails).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct TaskScheduleDetailsBuilder {
    pub(crate) status_update_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) disabled_reason: ::std::option::Option<::std::string::String>,
    pub(crate) disabled_by: ::std::option::Option<crate::types::ScheduleDisabledBy>,
}
impl TaskScheduleDetailsBuilder {
    /// <p>Indicates the last time the status of your task schedule changed. For example, if DataSync automatically disables your schedule because of a repeated error, you can see when the schedule was disabled.</p>
    pub fn status_update_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.status_update_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>Indicates the last time the status of your task schedule changed. For example, if DataSync automatically disables your schedule because of a repeated error, you can see when the schedule was disabled.</p>
    pub fn set_status_update_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.status_update_time = input;
        self
    }
    /// <p>Indicates the last time the status of your task schedule changed. For example, if DataSync automatically disables your schedule because of a repeated error, you can see when the schedule was disabled.</p>
    pub fn get_status_update_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.status_update_time
    }
    /// <p>Provides a reason if the task schedule is disabled.</p>
    /// <p>If your schedule is disabled by <code>USER</code>, you see a <code>Manually disabled by user.</code> message.</p>
    /// <p>If your schedule is disabled by <code>SERVICE</code>, you see an error message to help you understand why the task keeps failing. For information on resolving DataSync errors, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/troubleshooting-datasync-locations-tasks.html">Troubleshooting issues with DataSync transfers</a>.</p>
    pub fn disabled_reason(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.disabled_reason = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Provides a reason if the task schedule is disabled.</p>
    /// <p>If your schedule is disabled by <code>USER</code>, you see a <code>Manually disabled by user.</code> message.</p>
    /// <p>If your schedule is disabled by <code>SERVICE</code>, you see an error message to help you understand why the task keeps failing. For information on resolving DataSync errors, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/troubleshooting-datasync-locations-tasks.html">Troubleshooting issues with DataSync transfers</a>.</p>
    pub fn set_disabled_reason(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.disabled_reason = input;
        self
    }
    /// <p>Provides a reason if the task schedule is disabled.</p>
    /// <p>If your schedule is disabled by <code>USER</code>, you see a <code>Manually disabled by user.</code> message.</p>
    /// <p>If your schedule is disabled by <code>SERVICE</code>, you see an error message to help you understand why the task keeps failing. For information on resolving DataSync errors, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/troubleshooting-datasync-locations-tasks.html">Troubleshooting issues with DataSync transfers</a>.</p>
    pub fn get_disabled_reason(&self) -> &::std::option::Option<::std::string::String> {
        &self.disabled_reason
    }
    /// <p>Indicates how your task schedule was disabled.</p>
    /// <ul>
    /// <li>
    /// <p><code>USER</code> - Your schedule was manually disabled by using the <a href="https://docs.aws.amazon.com/datasync/latest/userguide/API_UpdateTask.html">UpdateTask</a> operation or DataSync console.</p></li>
    /// <li>
    /// <p><code>SERVICE</code> - Your schedule was automatically disabled by DataSync because the task failed repeatedly with the same error.</p></li>
    /// </ul>
    pub fn disabled_by(mut self, input: crate::types::ScheduleDisabledBy) -> Self {
        self.disabled_by = ::std::option::Option::Some(input);
        self
    }
    /// <p>Indicates how your task schedule was disabled.</p>
    /// <ul>
    /// <li>
    /// <p><code>USER</code> - Your schedule was manually disabled by using the <a href="https://docs.aws.amazon.com/datasync/latest/userguide/API_UpdateTask.html">UpdateTask</a> operation or DataSync console.</p></li>
    /// <li>
    /// <p><code>SERVICE</code> - Your schedule was automatically disabled by DataSync because the task failed repeatedly with the same error.</p></li>
    /// </ul>
    pub fn set_disabled_by(mut self, input: ::std::option::Option<crate::types::ScheduleDisabledBy>) -> Self {
        self.disabled_by = input;
        self
    }
    /// <p>Indicates how your task schedule was disabled.</p>
    /// <ul>
    /// <li>
    /// <p><code>USER</code> - Your schedule was manually disabled by using the <a href="https://docs.aws.amazon.com/datasync/latest/userguide/API_UpdateTask.html">UpdateTask</a> operation or DataSync console.</p></li>
    /// <li>
    /// <p><code>SERVICE</code> - Your schedule was automatically disabled by DataSync because the task failed repeatedly with the same error.</p></li>
    /// </ul>
    pub fn get_disabled_by(&self) -> &::std::option::Option<crate::types::ScheduleDisabledBy> {
        &self.disabled_by
    }
    /// Consumes the builder and constructs a [`TaskScheduleDetails`](crate::types::TaskScheduleDetails).
    pub fn build(self) -> crate::types::TaskScheduleDetails {
        crate::types::TaskScheduleDetails {
            status_update_time: self.status_update_time,
            disabled_reason: self.disabled_reason,
            disabled_by: self.disabled_by,
        }
    }
}
