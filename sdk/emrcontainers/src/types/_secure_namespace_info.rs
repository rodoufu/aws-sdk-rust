// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Namespace inputs for the system job.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SecureNamespaceInfo {
    /// <p>The ID of the Amazon EKS cluster where Amazon EMR on EKS jobs run.</p>
    pub cluster_id: ::std::option::Option<::std::string::String>,
    /// <p>The namespace of the Amazon EKS cluster where the system jobs run.</p>
    pub namespace: ::std::option::Option<::std::string::String>,
}
impl SecureNamespaceInfo {
    /// <p>The ID of the Amazon EKS cluster where Amazon EMR on EKS jobs run.</p>
    pub fn cluster_id(&self) -> ::std::option::Option<&str> {
        self.cluster_id.as_deref()
    }
    /// <p>The namespace of the Amazon EKS cluster where the system jobs run.</p>
    pub fn namespace(&self) -> ::std::option::Option<&str> {
        self.namespace.as_deref()
    }
}
impl SecureNamespaceInfo {
    /// Creates a new builder-style object to manufacture [`SecureNamespaceInfo`](crate::types::SecureNamespaceInfo).
    pub fn builder() -> crate::types::builders::SecureNamespaceInfoBuilder {
        crate::types::builders::SecureNamespaceInfoBuilder::default()
    }
}

/// A builder for [`SecureNamespaceInfo`](crate::types::SecureNamespaceInfo).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct SecureNamespaceInfoBuilder {
    pub(crate) cluster_id: ::std::option::Option<::std::string::String>,
    pub(crate) namespace: ::std::option::Option<::std::string::String>,
}
impl SecureNamespaceInfoBuilder {
    /// <p>The ID of the Amazon EKS cluster where Amazon EMR on EKS jobs run.</p>
    pub fn cluster_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.cluster_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the Amazon EKS cluster where Amazon EMR on EKS jobs run.</p>
    pub fn set_cluster_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.cluster_id = input;
        self
    }
    /// <p>The ID of the Amazon EKS cluster where Amazon EMR on EKS jobs run.</p>
    pub fn get_cluster_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.cluster_id
    }
    /// <p>The namespace of the Amazon EKS cluster where the system jobs run.</p>
    pub fn namespace(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.namespace = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The namespace of the Amazon EKS cluster where the system jobs run.</p>
    pub fn set_namespace(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.namespace = input;
        self
    }
    /// <p>The namespace of the Amazon EKS cluster where the system jobs run.</p>
    pub fn get_namespace(&self) -> &::std::option::Option<::std::string::String> {
        &self.namespace
    }
    /// Consumes the builder and constructs a [`SecureNamespaceInfo`](crate::types::SecureNamespaceInfo).
    pub fn build(self) -> crate::types::SecureNamespaceInfo {
        crate::types::SecureNamespaceInfo {
            cluster_id: self.cluster_id,
            namespace: self.namespace,
        }
    }
}
