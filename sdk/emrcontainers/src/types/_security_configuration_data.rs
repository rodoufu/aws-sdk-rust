// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Configurations related to the security configuration for the request.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SecurityConfigurationData {
    /// <p>Authorization-related configuration input for the security configuration.</p>
    pub authorization_configuration: ::std::option::Option<crate::types::AuthorizationConfiguration>,
}
impl SecurityConfigurationData {
    /// <p>Authorization-related configuration input for the security configuration.</p>
    pub fn authorization_configuration(&self) -> ::std::option::Option<&crate::types::AuthorizationConfiguration> {
        self.authorization_configuration.as_ref()
    }
}
impl SecurityConfigurationData {
    /// Creates a new builder-style object to manufacture [`SecurityConfigurationData`](crate::types::SecurityConfigurationData).
    pub fn builder() -> crate::types::builders::SecurityConfigurationDataBuilder {
        crate::types::builders::SecurityConfigurationDataBuilder::default()
    }
}

/// A builder for [`SecurityConfigurationData`](crate::types::SecurityConfigurationData).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct SecurityConfigurationDataBuilder {
    pub(crate) authorization_configuration: ::std::option::Option<crate::types::AuthorizationConfiguration>,
}
impl SecurityConfigurationDataBuilder {
    /// <p>Authorization-related configuration input for the security configuration.</p>
    pub fn authorization_configuration(mut self, input: crate::types::AuthorizationConfiguration) -> Self {
        self.authorization_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>Authorization-related configuration input for the security configuration.</p>
    pub fn set_authorization_configuration(mut self, input: ::std::option::Option<crate::types::AuthorizationConfiguration>) -> Self {
        self.authorization_configuration = input;
        self
    }
    /// <p>Authorization-related configuration input for the security configuration.</p>
    pub fn get_authorization_configuration(&self) -> &::std::option::Option<crate::types::AuthorizationConfiguration> {
        &self.authorization_configuration
    }
    /// Consumes the builder and constructs a [`SecurityConfigurationData`](crate::types::SecurityConfigurationData).
    pub fn build(self) -> crate::types::SecurityConfigurationData {
        crate::types::SecurityConfigurationData {
            authorization_configuration: self.authorization_configuration,
        }
    }
}
