// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes a single rule in a network ACL.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct EntryDescription {
    /// <p>Describes a rule in a network ACL.</p>
    /// <p>Each network ACL has a set of numbered ingress rules and a separate set of numbered egress rules. When determining whether a packet should be allowed in or out of a subnet associated with the network ACL, Amazon Web Services processes the entries in the network ACL according to the rule numbers, in ascending order.</p>
    /// <p>When you manage an individual network ACL, you explicitly specify the rule numbers. When you specify the network ACL rules in a Firewall Manager policy, you provide the rules to run first, in the order that you want them to run, and the rules to run last, in the order that you want them to run. Firewall Manager assigns the rule numbers for you when you save the network ACL policy specification.</p>
    pub entry_detail: ::std::option::Option<crate::types::NetworkAclEntry>,
    /// <p>The rule number for the entry. ACL entries are processed in ascending order by rule number. In a Firewall Manager network ACL policy, Firewall Manager assigns rule numbers.</p>
    pub entry_rule_number: i32,
    /// <p>Specifies whether the entry is managed by Firewall Manager or by a user, and, for Firewall Manager-managed entries, specifies whether the entry is among those that run first in the network ACL or those that run last.</p>
    pub entry_type: ::std::option::Option<crate::types::EntryType>,
}
impl EntryDescription {
    /// <p>Describes a rule in a network ACL.</p>
    /// <p>Each network ACL has a set of numbered ingress rules and a separate set of numbered egress rules. When determining whether a packet should be allowed in or out of a subnet associated with the network ACL, Amazon Web Services processes the entries in the network ACL according to the rule numbers, in ascending order.</p>
    /// <p>When you manage an individual network ACL, you explicitly specify the rule numbers. When you specify the network ACL rules in a Firewall Manager policy, you provide the rules to run first, in the order that you want them to run, and the rules to run last, in the order that you want them to run. Firewall Manager assigns the rule numbers for you when you save the network ACL policy specification.</p>
    pub fn entry_detail(&self) -> ::std::option::Option<&crate::types::NetworkAclEntry> {
        self.entry_detail.as_ref()
    }
    /// <p>The rule number for the entry. ACL entries are processed in ascending order by rule number. In a Firewall Manager network ACL policy, Firewall Manager assigns rule numbers.</p>
    pub fn entry_rule_number(&self) -> i32 {
        self.entry_rule_number
    }
    /// <p>Specifies whether the entry is managed by Firewall Manager or by a user, and, for Firewall Manager-managed entries, specifies whether the entry is among those that run first in the network ACL or those that run last.</p>
    pub fn entry_type(&self) -> ::std::option::Option<&crate::types::EntryType> {
        self.entry_type.as_ref()
    }
}
impl EntryDescription {
    /// Creates a new builder-style object to manufacture [`EntryDescription`](crate::types::EntryDescription).
    pub fn builder() -> crate::types::builders::EntryDescriptionBuilder {
        crate::types::builders::EntryDescriptionBuilder::default()
    }
}

/// A builder for [`EntryDescription`](crate::types::EntryDescription).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct EntryDescriptionBuilder {
    pub(crate) entry_detail: ::std::option::Option<crate::types::NetworkAclEntry>,
    pub(crate) entry_rule_number: ::std::option::Option<i32>,
    pub(crate) entry_type: ::std::option::Option<crate::types::EntryType>,
}
impl EntryDescriptionBuilder {
    /// <p>Describes a rule in a network ACL.</p>
    /// <p>Each network ACL has a set of numbered ingress rules and a separate set of numbered egress rules. When determining whether a packet should be allowed in or out of a subnet associated with the network ACL, Amazon Web Services processes the entries in the network ACL according to the rule numbers, in ascending order.</p>
    /// <p>When you manage an individual network ACL, you explicitly specify the rule numbers. When you specify the network ACL rules in a Firewall Manager policy, you provide the rules to run first, in the order that you want them to run, and the rules to run last, in the order that you want them to run. Firewall Manager assigns the rule numbers for you when you save the network ACL policy specification.</p>
    pub fn entry_detail(mut self, input: crate::types::NetworkAclEntry) -> Self {
        self.entry_detail = ::std::option::Option::Some(input);
        self
    }
    /// <p>Describes a rule in a network ACL.</p>
    /// <p>Each network ACL has a set of numbered ingress rules and a separate set of numbered egress rules. When determining whether a packet should be allowed in or out of a subnet associated with the network ACL, Amazon Web Services processes the entries in the network ACL according to the rule numbers, in ascending order.</p>
    /// <p>When you manage an individual network ACL, you explicitly specify the rule numbers. When you specify the network ACL rules in a Firewall Manager policy, you provide the rules to run first, in the order that you want them to run, and the rules to run last, in the order that you want them to run. Firewall Manager assigns the rule numbers for you when you save the network ACL policy specification.</p>
    pub fn set_entry_detail(mut self, input: ::std::option::Option<crate::types::NetworkAclEntry>) -> Self {
        self.entry_detail = input;
        self
    }
    /// <p>Describes a rule in a network ACL.</p>
    /// <p>Each network ACL has a set of numbered ingress rules and a separate set of numbered egress rules. When determining whether a packet should be allowed in or out of a subnet associated with the network ACL, Amazon Web Services processes the entries in the network ACL according to the rule numbers, in ascending order.</p>
    /// <p>When you manage an individual network ACL, you explicitly specify the rule numbers. When you specify the network ACL rules in a Firewall Manager policy, you provide the rules to run first, in the order that you want them to run, and the rules to run last, in the order that you want them to run. Firewall Manager assigns the rule numbers for you when you save the network ACL policy specification.</p>
    pub fn get_entry_detail(&self) -> &::std::option::Option<crate::types::NetworkAclEntry> {
        &self.entry_detail
    }
    /// <p>The rule number for the entry. ACL entries are processed in ascending order by rule number. In a Firewall Manager network ACL policy, Firewall Manager assigns rule numbers.</p>
    pub fn entry_rule_number(mut self, input: i32) -> Self {
        self.entry_rule_number = ::std::option::Option::Some(input);
        self
    }
    /// <p>The rule number for the entry. ACL entries are processed in ascending order by rule number. In a Firewall Manager network ACL policy, Firewall Manager assigns rule numbers.</p>
    pub fn set_entry_rule_number(mut self, input: ::std::option::Option<i32>) -> Self {
        self.entry_rule_number = input;
        self
    }
    /// <p>The rule number for the entry. ACL entries are processed in ascending order by rule number. In a Firewall Manager network ACL policy, Firewall Manager assigns rule numbers.</p>
    pub fn get_entry_rule_number(&self) -> &::std::option::Option<i32> {
        &self.entry_rule_number
    }
    /// <p>Specifies whether the entry is managed by Firewall Manager or by a user, and, for Firewall Manager-managed entries, specifies whether the entry is among those that run first in the network ACL or those that run last.</p>
    pub fn entry_type(mut self, input: crate::types::EntryType) -> Self {
        self.entry_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specifies whether the entry is managed by Firewall Manager or by a user, and, for Firewall Manager-managed entries, specifies whether the entry is among those that run first in the network ACL or those that run last.</p>
    pub fn set_entry_type(mut self, input: ::std::option::Option<crate::types::EntryType>) -> Self {
        self.entry_type = input;
        self
    }
    /// <p>Specifies whether the entry is managed by Firewall Manager or by a user, and, for Firewall Manager-managed entries, specifies whether the entry is among those that run first in the network ACL or those that run last.</p>
    pub fn get_entry_type(&self) -> &::std::option::Option<crate::types::EntryType> {
        &self.entry_type
    }
    /// Consumes the builder and constructs a [`EntryDescription`](crate::types::EntryDescription).
    pub fn build(self) -> crate::types::EntryDescription {
        crate::types::EntryDescription {
            entry_detail: self.entry_detail,
            entry_rule_number: self.entry_rule_number.unwrap_or_default(),
            entry_type: self.entry_type,
        }
    }
}
