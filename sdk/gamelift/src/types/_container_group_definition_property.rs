// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p><b>This data type is used with the Amazon GameLift containers feature, which is currently in public preview.</b></p>
/// <p>The properties of a container group that is deployed to a container fleet.</p>
/// <p><b>Part of:</b> <code>ContainerGroupsAttributes</code></p>
/// <p><b>Returned by:</b> <code>DescribeFleetAttributes</code></p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ContainerGroupDefinitionProperty {
    /// <p>The method for scheduling and maintaining copies of the container group across a container fleet.</p>
    pub scheduling_strategy: ::std::option::Option<crate::types::ContainerSchedulingStrategy>,
    /// <p>The unique identifier for the container group definition.</p>
    pub container_group_definition_name: ::std::option::Option<::std::string::String>,
}
impl ContainerGroupDefinitionProperty {
    /// <p>The method for scheduling and maintaining copies of the container group across a container fleet.</p>
    pub fn scheduling_strategy(&self) -> ::std::option::Option<&crate::types::ContainerSchedulingStrategy> {
        self.scheduling_strategy.as_ref()
    }
    /// <p>The unique identifier for the container group definition.</p>
    pub fn container_group_definition_name(&self) -> ::std::option::Option<&str> {
        self.container_group_definition_name.as_deref()
    }
}
impl ContainerGroupDefinitionProperty {
    /// Creates a new builder-style object to manufacture [`ContainerGroupDefinitionProperty`](crate::types::ContainerGroupDefinitionProperty).
    pub fn builder() -> crate::types::builders::ContainerGroupDefinitionPropertyBuilder {
        crate::types::builders::ContainerGroupDefinitionPropertyBuilder::default()
    }
}

/// A builder for [`ContainerGroupDefinitionProperty`](crate::types::ContainerGroupDefinitionProperty).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ContainerGroupDefinitionPropertyBuilder {
    pub(crate) scheduling_strategy: ::std::option::Option<crate::types::ContainerSchedulingStrategy>,
    pub(crate) container_group_definition_name: ::std::option::Option<::std::string::String>,
}
impl ContainerGroupDefinitionPropertyBuilder {
    /// <p>The method for scheduling and maintaining copies of the container group across a container fleet.</p>
    pub fn scheduling_strategy(mut self, input: crate::types::ContainerSchedulingStrategy) -> Self {
        self.scheduling_strategy = ::std::option::Option::Some(input);
        self
    }
    /// <p>The method for scheduling and maintaining copies of the container group across a container fleet.</p>
    pub fn set_scheduling_strategy(mut self, input: ::std::option::Option<crate::types::ContainerSchedulingStrategy>) -> Self {
        self.scheduling_strategy = input;
        self
    }
    /// <p>The method for scheduling and maintaining copies of the container group across a container fleet.</p>
    pub fn get_scheduling_strategy(&self) -> &::std::option::Option<crate::types::ContainerSchedulingStrategy> {
        &self.scheduling_strategy
    }
    /// <p>The unique identifier for the container group definition.</p>
    pub fn container_group_definition_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.container_group_definition_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier for the container group definition.</p>
    pub fn set_container_group_definition_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.container_group_definition_name = input;
        self
    }
    /// <p>The unique identifier for the container group definition.</p>
    pub fn get_container_group_definition_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.container_group_definition_name
    }
    /// Consumes the builder and constructs a [`ContainerGroupDefinitionProperty`](crate::types::ContainerGroupDefinitionProperty).
    pub fn build(self) -> crate::types::ContainerGroupDefinitionProperty {
        crate::types::ContainerGroupDefinitionProperty {
            scheduling_strategy: self.scheduling_strategy,
            container_group_definition_name: self.container_group_definition_name,
        }
    }
}
