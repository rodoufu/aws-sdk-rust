// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Details about the state of the EC2 scan configuration for your environment.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct Ec2ConfigurationState {
    /// <p>An object that contains details about the state of the Amazon EC2 scan mode.</p>
    pub scan_mode_state: ::std::option::Option<crate::types::Ec2ScanModeState>,
}
impl Ec2ConfigurationState {
    /// <p>An object that contains details about the state of the Amazon EC2 scan mode.</p>
    pub fn scan_mode_state(&self) -> ::std::option::Option<&crate::types::Ec2ScanModeState> {
        self.scan_mode_state.as_ref()
    }
}
impl Ec2ConfigurationState {
    /// Creates a new builder-style object to manufacture [`Ec2ConfigurationState`](crate::types::Ec2ConfigurationState).
    pub fn builder() -> crate::types::builders::Ec2ConfigurationStateBuilder {
        crate::types::builders::Ec2ConfigurationStateBuilder::default()
    }
}

/// A builder for [`Ec2ConfigurationState`](crate::types::Ec2ConfigurationState).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct Ec2ConfigurationStateBuilder {
    pub(crate) scan_mode_state: ::std::option::Option<crate::types::Ec2ScanModeState>,
}
impl Ec2ConfigurationStateBuilder {
    /// <p>An object that contains details about the state of the Amazon EC2 scan mode.</p>
    pub fn scan_mode_state(mut self, input: crate::types::Ec2ScanModeState) -> Self {
        self.scan_mode_state = ::std::option::Option::Some(input);
        self
    }
    /// <p>An object that contains details about the state of the Amazon EC2 scan mode.</p>
    pub fn set_scan_mode_state(mut self, input: ::std::option::Option<crate::types::Ec2ScanModeState>) -> Self {
        self.scan_mode_state = input;
        self
    }
    /// <p>An object that contains details about the state of the Amazon EC2 scan mode.</p>
    pub fn get_scan_mode_state(&self) -> &::std::option::Option<crate::types::Ec2ScanModeState> {
        &self.scan_mode_state
    }
    /// Consumes the builder and constructs a [`Ec2ConfigurationState`](crate::types::Ec2ConfigurationState).
    pub fn build(self) -> crate::types::Ec2ConfigurationState {
        crate::types::Ec2ConfigurationState {
            scan_mode_state: self.scan_mode_state,
        }
    }
}
