// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The state of your Amazon EC2 scan mode configuration.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct Ec2ScanModeState {
    /// <p>The scan method that is applied to the instance.</p>
    pub scan_mode: ::std::option::Option<crate::types::Ec2ScanMode>,
    /// <p>The status of the Amazon EC2 scan mode setting.</p>
    pub scan_mode_status: ::std::option::Option<crate::types::Ec2ScanModeStatus>,
}
impl Ec2ScanModeState {
    /// <p>The scan method that is applied to the instance.</p>
    pub fn scan_mode(&self) -> ::std::option::Option<&crate::types::Ec2ScanMode> {
        self.scan_mode.as_ref()
    }
    /// <p>The status of the Amazon EC2 scan mode setting.</p>
    pub fn scan_mode_status(&self) -> ::std::option::Option<&crate::types::Ec2ScanModeStatus> {
        self.scan_mode_status.as_ref()
    }
}
impl Ec2ScanModeState {
    /// Creates a new builder-style object to manufacture [`Ec2ScanModeState`](crate::types::Ec2ScanModeState).
    pub fn builder() -> crate::types::builders::Ec2ScanModeStateBuilder {
        crate::types::builders::Ec2ScanModeStateBuilder::default()
    }
}

/// A builder for [`Ec2ScanModeState`](crate::types::Ec2ScanModeState).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct Ec2ScanModeStateBuilder {
    pub(crate) scan_mode: ::std::option::Option<crate::types::Ec2ScanMode>,
    pub(crate) scan_mode_status: ::std::option::Option<crate::types::Ec2ScanModeStatus>,
}
impl Ec2ScanModeStateBuilder {
    /// <p>The scan method that is applied to the instance.</p>
    pub fn scan_mode(mut self, input: crate::types::Ec2ScanMode) -> Self {
        self.scan_mode = ::std::option::Option::Some(input);
        self
    }
    /// <p>The scan method that is applied to the instance.</p>
    pub fn set_scan_mode(mut self, input: ::std::option::Option<crate::types::Ec2ScanMode>) -> Self {
        self.scan_mode = input;
        self
    }
    /// <p>The scan method that is applied to the instance.</p>
    pub fn get_scan_mode(&self) -> &::std::option::Option<crate::types::Ec2ScanMode> {
        &self.scan_mode
    }
    /// <p>The status of the Amazon EC2 scan mode setting.</p>
    pub fn scan_mode_status(mut self, input: crate::types::Ec2ScanModeStatus) -> Self {
        self.scan_mode_status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of the Amazon EC2 scan mode setting.</p>
    pub fn set_scan_mode_status(mut self, input: ::std::option::Option<crate::types::Ec2ScanModeStatus>) -> Self {
        self.scan_mode_status = input;
        self
    }
    /// <p>The status of the Amazon EC2 scan mode setting.</p>
    pub fn get_scan_mode_status(&self) -> &::std::option::Option<crate::types::Ec2ScanModeStatus> {
        &self.scan_mode_status
    }
    /// Consumes the builder and constructs a [`Ec2ScanModeState`](crate::types::Ec2ScanModeState).
    pub fn build(self) -> crate::types::Ec2ScanModeState {
        crate::types::Ec2ScanModeState {
            scan_mode: self.scan_mode,
            scan_mode_status: self.scan_mode_status,
        }
    }
}
