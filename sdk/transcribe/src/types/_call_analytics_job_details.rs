// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains details about a call analytics job, including information about skipped analytics features.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CallAnalyticsJobDetails {
    /// <p>Contains information about any skipped analytics features during the analysis of a call analytics job.</p>
    /// <p>This array lists all the analytics features that were skipped, along with their corresponding reason code and message.</p>
    pub skipped: ::std::option::Option<::std::vec::Vec<crate::types::CallAnalyticsSkippedFeature>>,
}
impl CallAnalyticsJobDetails {
    /// <p>Contains information about any skipped analytics features during the analysis of a call analytics job.</p>
    /// <p>This array lists all the analytics features that were skipped, along with their corresponding reason code and message.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.skipped.is_none()`.
    pub fn skipped(&self) -> &[crate::types::CallAnalyticsSkippedFeature] {
        self.skipped.as_deref().unwrap_or_default()
    }
}
impl CallAnalyticsJobDetails {
    /// Creates a new builder-style object to manufacture [`CallAnalyticsJobDetails`](crate::types::CallAnalyticsJobDetails).
    pub fn builder() -> crate::types::builders::CallAnalyticsJobDetailsBuilder {
        crate::types::builders::CallAnalyticsJobDetailsBuilder::default()
    }
}

/// A builder for [`CallAnalyticsJobDetails`](crate::types::CallAnalyticsJobDetails).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct CallAnalyticsJobDetailsBuilder {
    pub(crate) skipped: ::std::option::Option<::std::vec::Vec<crate::types::CallAnalyticsSkippedFeature>>,
}
impl CallAnalyticsJobDetailsBuilder {
    /// Appends an item to `skipped`.
    ///
    /// To override the contents of this collection use [`set_skipped`](Self::set_skipped).
    ///
    /// <p>Contains information about any skipped analytics features during the analysis of a call analytics job.</p>
    /// <p>This array lists all the analytics features that were skipped, along with their corresponding reason code and message.</p>
    pub fn skipped(mut self, input: crate::types::CallAnalyticsSkippedFeature) -> Self {
        let mut v = self.skipped.unwrap_or_default();
        v.push(input);
        self.skipped = ::std::option::Option::Some(v);
        self
    }
    /// <p>Contains information about any skipped analytics features during the analysis of a call analytics job.</p>
    /// <p>This array lists all the analytics features that were skipped, along with their corresponding reason code and message.</p>
    pub fn set_skipped(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::CallAnalyticsSkippedFeature>>) -> Self {
        self.skipped = input;
        self
    }
    /// <p>Contains information about any skipped analytics features during the analysis of a call analytics job.</p>
    /// <p>This array lists all the analytics features that were skipped, along with their corresponding reason code and message.</p>
    pub fn get_skipped(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::CallAnalyticsSkippedFeature>> {
        &self.skipped
    }
    /// Consumes the builder and constructs a [`CallAnalyticsJobDetails`](crate::types::CallAnalyticsJobDetails).
    pub fn build(self) -> crate::types::CallAnalyticsJobDetails {
        crate::types::CallAnalyticsJobDetails { skipped: self.skipped }
    }
}
